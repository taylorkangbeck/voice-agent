services:
  neo4j:
    container_name: voice-agent-neo4j
    # Docker image to be used
    image: neo4j:community
    hostname: neo4j

    # The ports that will be accessible from outside the container - HTTP (7474) and Bolt (7687).
    ports:
      - "7474:7474"
      - "7687:7687"

    # Uncomment the volumes to be mounted to make them accessible from outside the container.
    volumes:
      # - ./config/neo4j.conf:/conf/neo4j.conf # This is the main configuration file.
      - ./mounts/neo4j/data:/data
      - ./mounts/neo4j/logs:/logs
      - ./mounts/neo4j/conf:/conf
      # - ./import/server1:/import
      #- ./metrics/server1:/metrics
      #- ./licenses/server1:/licenses
      #- ./ssl/server1:/ssl

    # Passes the following environment variables to the container
    environment:
      # - NEO4J_ACCEPT_LICENSE_AGREEMENT
      - NEO4J_AUTH
      # - EXTENDED_CONF
      # - NEO4J_EDITION
      # - NEO4J_initial_server_mode__constraint=PRIMARY
      - "NEO4J_dbms_security_procedures_unrestricted=apoc.*"
      - "NEO4J_dbms.usage_report.enabled=false"

    # Simple check testing whether the port 7474 is opened.
    # If so, the instance running inside the container is considered as "healthy".
    # This status can be checked using the "docker ps" command.
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1",
        ]

    # Set up the user
    # user: ${USER_ID}:${GROUP_ID}

  # elasticsearch:
  #   container_name: voice-agent-elasticsearch
  #   environment:
  #     - cluster.routing.allocation.disk.threshold_enabled=true
  #     - cluster.routing.allocation.disk.watermark.low=512mb
  #     - cluster.routing.allocation.disk.watermark.high=256mb
  #     - cluster.routing.allocation.disk.watermark.flood_stage=128mb
  #     - discovery.type=single-node
  #     - ES_JAVA_OPTS=-Xms256m -Xmx256m
  #     - xpack.security.enabled=true
  #     - ELASTIC_USERNAME=${ELASTICSEARCH_USER}
  #     - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
  #   image: elasticsearch:7.16.2
  #   expose:
  #     - 9200
  #   volumes:
  #     - /var/lib/elasticsearch/data
  #   restart: on-failure

  # # Local embedding models service: https://github.com/michaelfeil/infinity
  # infinity:
  #   container_name: voice-agent-infinity
  #   image: michaelf34/infinity:latest
  #   ports:
  #     - "7997:7997"
  #   volumes:
  #     - ./mounts/infinity/cache:/app/.cache

  #   # SentenceTransformer models are supported
  #   command:
  #     [
  #       "v2",
  #       "--model-id",
  #       "Alibaba-NLP/gte-large-en-v1.5",
  #       "--model-id",
  #       "mixedbread-ai/mxbai-rerank-large-v1",
  #       "--port",
  #       "7997",
  #     ]
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: all
  #             capabilities: [gpu]
